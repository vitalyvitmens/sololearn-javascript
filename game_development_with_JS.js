//TODO: Game Development with JS (Разработка игр с JS)
// Добро пожаловать на наш курс по разработке игр! В ходе этого курса мы научимся разрабатывать игры в Интернете. Мы начнем с основ HTML 5, CSS и JavaScript, а также покажем, как создавать настоящие веб-игры с нуля!

//TODO: Introduction (
// Введение:
// Добро пожаловать на наш курс по разработке игр!!!
// В ходе этого курса мы научимся разрабатывать игры в Интернете.
// Мы будем использовать базовые веб-технологии: HTML 5, CSS и JavaScript.
// Мы начнем с основ HTML 5, CSS и JavaScript, а также покажем, как создавать настоящие веб-игры с нуля!

//TODO: JavaScript (JavaScript)
// JavaScript — это язык программирования для Интернета. Его можно использовать для создания интерактивных элементов, создания раскрывающихся меню, обработки событий нажатия кнопок и многого другого!
// В нашем курсе мы будем использовать JavaScript для рисования фигур, графики, а также для создания анимации.

//TODO: Benefits of HTML (Преимущества HTML)
// Одним из самых больших преимуществ использования HTML/CSS/JavaScript является то, что он может работать на любом устройстве без необходимости в каком-либо дополнительном программном обеспечении! Это возможно, потому что он работает в браузере, как простой веб-сайт.
// Большинство современных браузеров поддерживают тот функционал, который мы будем использовать, благодаря чему наши игры запускаются даже на мобильных устройствах!

//TODO: Introduction (
// Введение
// Вот некоторые вещи, которые мы изучим в этом курсе:
// - HTML
// - CSS
// - JavaScript basics (Основы JavaScript)
// - Drawing on the web (Рисование в Интернете)
// - Animations (Анимации)
// - Game Loops (Игровые циклы)
// - Collision Detection (Обнаружение столкновений)
// - и многое другое!
// Если вы чувствуете, что вам нужна дополнительная информация, вы всегда можете обратиться к нашим учебникам по HTML, CSS и JavaScript, которые охватывают основные теги, синтаксис и концепции веб-разработки.

//TODO: HTML (HTML)
// Начнем с HTML.
// HTML расшифровывается как язык гипертекстовой разметки . _ _ _ Язык разметки использует теги для идентификации содержимого.
{
  /* <p> — это тег, используемый для создания абзаца текста.
Вот пример тега HTML: */
}
{
  /* <p> I'm a paragraph </p> */
}

//TODO: Tags (Теги)
// Большинство тегов имеют открывающий и закрывающий теги, между которыми размещается содержимое.
// Например, тег абзаца <p> должен иметь закрывающий тег </p> .
// Закрывающий тег создается с помощью косой черты / .
{
  /* <p> I'm a paragraph </p> */
}

//TODO: Basic HTML Document (Базовый HTML-документ)
// В HTML есть много разных тегов, которые служат своей цели.
// Базовый HTML-документ в Интернете имеет следующую структуру:
// Тег <html> определяет страницу, а тег <body> определяет основное содержимое HTML-документа и содержит все элементы страницы, такие как абзацы, таблицы, списки и т.д.
{
  /* <html>
   <body>
   </body>
</html> */
}

//TODO: HTML Headings (HTML-заголовки)
// Теперь давайте посмотрим на некоторые из основных элементов, которые мы можем создать.
// Заголовки используются для создания заголовков и подзаголовков на странице.
// HTML включает шесть уровней заголовков, ранжированных по степени важности.
// Это <h1>, <h2>, <h3>, <h4>, <h5> и <h6>. Следующий код определяет все заголовки:
{
  /* <html>
    <head>
        <title>first page</title>
    </head>
    <body>
        <h1>This is heading 1</h1>
        <h2>This is heading 2</h2>
        <h3>This is heading 3</h3>
        <h4>This is heading 4</h4>
        <h5>This is heading 5</h5>
        <h6>This is heading 6</h6>
    </body>
</html> */
}

//TODO: Paragraphs (Параграфы, обзацы, пункты)
// Как мы уже видели, абзацы создаются с помощью тега <p> . На нашей странице
// может быть несколько тегов <p>:
{
  /* <h1>My Game</h1>
<p>This is fun</p>
<p>This is another text</p> */
}

//TODO: Line Break (Разрыв строки)
// Некоторые элементы HTML не имеют закрывающего тега. Например, тег <br /> используется для добавления разрыва строки:
// Приведенный ниже код создает абзац текста с разрывом строки.
// Как видите, теги HTML можно включать в другие теги для форматирования содержимого.
{
  /* <p>
Name: Player 1 <br />
Points: 42
</p> */
}

//TODO: Practice: HTML Basics (Практика: основы HTML)
// Давайте вспомним некоторые основные концепции HTML, которые вы можете применить к своему игровому проекту.
// 1. Заголовки используются для создания заголовков и подзаголовков на странице.
// HTML включает шесть уровней заголовков, ранжированных по степени важности.
// Это <h1>, <h2>, <h3>, <h4>, <h5> и <h6>.
// 2. Абзацы создаются с помощью тега <p>.
{
  /* <div class="box">
  some text
</div> */
}

//TODO: Задача: Welcome to Code Repo! (Добро пожаловать в репозиторий кода!)
// В этом проекте мы создадим игру Jumper с нуля.
// Мы начнем с базовой веб-структуры и перейдем к более сложной анимации и обработке событий по мере прохождения уроков!
// Просмотрите каждую задачу, напишите свой код, зафиксируйте его, чтобы сохранить прогресс, и продолжайте развивать проект на каждом этапе.
// Это будет весело, так что давайте начнем! Давайте начнем с базового HTML. Задания: 1. Добавить заголовок с текстом «My Jumper Game». 2. Добавьте абзац под заголовком, который гласит: «Веселая игра, похожая на птичку». Подсказка : добавьте заголовок и абзац, используя соответствующие теги, например:
{
  /* <h1>My Jumper Game</h1>
<p>A fun flappy-bird like game.</p> */
}

//TODO: HTML Attributes (HTML-атрибуты)
// Атрибуты предоставляют дополнительную информацию об элементе или теге, а также изменяют их. Большинство атрибутов имеют значение; значение изменяет атрибут.
// В этом примере значение «center» указывает, что содержимое внутри элемента p должно быть выровнено по центру:
// Атрибуты всегда указываются в начальном теге и появляются в парах name="value".
{
  /* <p align="center">
    This text is aligned to center
</p>
<p align="right">
    This text is aligned to right
</p> */
}
